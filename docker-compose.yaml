version: '3.9'

services:

  eureka-server:
    container_name: eureka-server
    build: eureka-server
    image: eureka-server:latest
    ports:
      - "8761:8761"

  config-server:
    container_name: config-server
    build: config-server
    image: config-server:latest
    depends_on:
      - eureka-server
    ports:
      - "8888:8888"

  gateway:
    container_name: gateway
    build: gateway
    image: gateway:latest
    depends_on:
      - eureka-server
    ports:
      - "8765:8765"

  auth:
    container_name: auth
    build: auth
    image: auth:latest
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/itmusik
      - SPRING_DATASOURCE_USERNAME=user-db
      - SPRING_DATASOURCE_PASSWORD=kt^#54hfff@%*t53gfhj
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none

  music:
    container_name: music
    build: music
    image: music:latest
    depends_on:
      - postgres
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/itmusik
      - SPRING_DATASOURCE_USERNAME=user-db
      - SPRING_DATASOURCE_PASSWORD=kt^#54hfff@%*t53gfhj
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none

  user:
    container_name: user
    build: user
    image: user:latest
    depends_on:
      - postgres
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/itmusik
      - SPRING_DATASOURCE_USERNAME=user-db
      - SPRING_DATASOURCE_PASSWORD=kt^#54hfff@%*t53gfhj
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none

  song:
    container_name: song
    build: song
    image: song:latest
    depends_on:
      - postgres
    ports:
      - "8083:8083"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/itmusik
      - SPRING_DATASOURCE_USERNAME=user-db
      - SPRING_DATASOURCE_PASSWORD=kt^#54hfff@%*t53gfhj
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none

  scrobble:
    container_name: scrobble
    build: scrobble
    image: scrobble:latest
    depends_on:
      - postgres
    ports:
      - "8084:8084"

  file-service:
    container_name: file-service
    build: file-service
    image: file-service:latest
    depends_on:
      - postgres
    ports:
      - "8085:8085"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/itmusik
      - SPRING_DATASOURCE_USERNAME=user-db
      - SPRING_DATASOURCE_PASSWORD=kt^#54hfff@%*t53gfhj
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none

  notification:
    container_name: notification
    build: notification
    image: notification:latest
    depends_on:
      - broker
    ports:
      - "8086:8086"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/itmusik
      - SPRING_DATASOURCE_USERNAME=user-db
      - SPRING_DATASOURCE_PASSWORD=kt^#54hfff@%*t53gfhj
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none

  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      POSTGRES_DB: "itmusik"
      POSTGRES_USER: "user-db"
      POSTGRES_PASSWORD: "kt^#54hfff@%*t53gfhj"
      PGDATA: "/var/lib/postgresql/data/pgdata"
#    volumes:
#      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:latest
    container_name: broker
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker:19092,EXTERNAL://broker:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

volumes:
  postgres-data:
