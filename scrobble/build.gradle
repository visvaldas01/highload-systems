plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'ru.ifmo'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2022.0.4")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'com.netflix.feign:feign-jackson:8.18.0'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.flywaydb:flyway-core'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation "org.testcontainers:postgresql:1.19.1"
    testImplementation "org.testcontainers:testcontainers:1.19.1"
    testImplementation "org.testcontainers:junit-jupiter:1.19.1"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.3.0'
    implementation 'io.projectreactor:reactor-core'
    implementation 'org.springframework.boot:spring-boot-starter-webflux:3.1.2'

    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.postgresql:postgresql:42.6.0'
    implementation 'org.postgresql:r2dbc-postgresql:1.0.2.RELEASE'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
